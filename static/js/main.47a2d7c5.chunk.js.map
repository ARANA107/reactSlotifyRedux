{"version":3,"sources":["shared/AlbumsList.js","reducers/playerReducer.js","actions/playerActions.js","reducers/index.js","store.js","domainName.js","components/songsComponent.js","actions/fetchSongs.js","components/SidebarComponent.js","components/PlayerComponent.js","components/AlbumsComponent.js","components/MainComponent.js","components/login.js","components/CustomDragDrop.js","App.js","serviceWorker.js","index.js"],"names":["AlbumsList","id","albumName","albumPhoto","albumSinger","songs","songId","songName","songDuration","songPath","albumNum","initialState","allSongs","currentSong","loggedIn","albumsList","currentAlbum","songsSelected","currentSongObj","playerReducer","state","action","console","log","type","payload","combineReducers","player","middleWare","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","Domain","songsComponent","props","setCurrentSongPath","path","playSong","songList","count","item","this","setCurrentSongObj","playsong","className","src","album","alt","length","map","key","onClick","imageClick","albumInfo","Component","connect","dispatch","song","SidebarComponent","to","PlayerComponent","shuffleSongs","shuffleSong","setState","shuffledListId","idArray","shuffleArray","prevSong","prevSongId","shuffledIds","repeat","currentSongId","num","forEach","audio","load","play","playSongComponent","playPromise","undefined","then","_","catch","error","pauseSong","pause","nextSong","nextSongId","formatTime","time","Math","floor","slice","handleEvent","event","mouseDown","handleEvent2","timeFromOffset","myInput","current","offsetWidth","onMouseMove","e","handlOnMouseDownVol","handleOnMouseUpVol","perc","nativeEvent","offsetX","myInputVol","setVol","vol","onMouseMoveVol","mute","volSymbol","prevVol","onloadedmetadata","volume","muted","repeatSong","setTime","currentTime","React","createRef","myInputPlayBar","remTime","currTime","dummyCounter","Audio","onRef","duration","addEventListener","array","i","j","random","temp","mouse","progressBar","percentage","seconds","preventDefault","finalP","finalVol","onMouseDown","bind","onDragStart","onDrag","ref","title","style","display","onMouseUp","width","AlbumsComponent","setSongs","setCurrentAlbum","setCurrentSongs","history","push","cursor","imageWidth","minWidth","thumbnail","margin","maxWidth","albums","albumsArray","withRouter","fetchSongs","MainComponent","showAlbumsList","backgroundColor","height","component","login","isloggedin","domain","data-validate","name","placeholder","onChange","target","value","logInUser","CustomDragDrop","tasks","category","bgcolor","ev","dataTransfer","setData","onDragOver","onDrop","cat","getData","filter","task","wip","complete","t","draggable","App","exact","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.47a2d7c5.chunk.js","sourcesContent":["export const AlbumsList = [\r\n        {\r\n            id:1,\r\n            albumName: \"some album\",\r\n            albumPhoto: \"images/clearday.jpg\",\r\n            albumSinger: \"Ash\",\r\n            songs: [\r\n                {\r\n                    songId:1,\r\n                    songName: \"lets see the wind\",\r\n                    songDuration: \"3:37\",\r\n                    songPath: \"songs/bensound-summer.mp3\"\r\n                },\r\n                {\r\n                    songId:2,\r\n                    songName: \"lets eat some fun\",\r\n                    songDuration: \"1:44\",\r\n                    songPath: \"songs/bensound-jazzyfrenchy.mp3\"\r\n\r\n                },\r\n                {\r\n                    songId:3,\r\n                    songName: \"lets poop some depression!\",\r\n                    songDuration: \"1:29\",\r\n                    songPath: \"songs/bensound-clearday.mp3\"\r\n\r\n                },\r\n                {\r\n                    songId:4,\r\n                    songName: \"this is 4th song\",\r\n                    songDuration: \"4:04\",\r\n                    songPath: \"songs/bensound-goinghigher.mp3\"\r\n\r\n                },\r\n                {\r\n                    songId:5,\r\n                    songName: \"this is 5th song\",\r\n                    songDuration: \"2:49\",\r\n                    songPath: \"songs/bensound-littleidea.mp3\"\r\n\r\n                },\r\n                {\r\n                    songId:6,\r\n                    songName: \"this is 6th song\",\r\n                    songDuration: \"2:26\",\r\n                    songPath: \"songs/bensound-ukulele.mp3\"\r\n\r\n                }\r\n\r\n            ]\r\n        },\r\n        {\r\n            id:2,\r\n            albumName: \"ok thats it\",\r\n            albumPhoto: \"images/funkyelement.jpg\",\r\n            albumSinger: \"Pawan\",\r\n            songs: [\r\n                {\r\n                    songId:1,\r\n                    songName: \"gonna get some\",\r\n                    songDuration: 21,\r\n                    songPath: \"songs/bensound-summer.mp3\",\r\n\r\n                },\r\n                {\r\n                    songId:2,\r\n                    songName: \"what is it\",\r\n                    songDuration: 999,\r\n                    songPath: \"songs/bensound-summer.mp3\",\r\n\r\n                }\r\n\r\n            ]\r\n        }, \r\n        {\r\n            id:3,\r\n            albumName: \"this is something\",\r\n            albumPhoto: \"images/goinghigher.jpg\",\r\n            albumSinger: \"Johny\",\r\n            songs: [\r\n                {\r\n                    songId:1,\r\n                    songName: \"Something in the shadow\",\r\n                    songDuration: 98,\r\n                    songPath: \"songs/bensound-summer.mp3\",\r\n\r\n                }\r\n               \r\n\r\n            ]\r\n        },\r\n        {\r\n            id:4,\r\n            albumName: \"okay album\",\r\n            albumPhoto: \"images/popdance.jpg\",\r\n            albumSinger: \"Random Singer\",\r\n            songs: [\r\n                {\r\n                    songId:1,\r\n                    songName: \"holiday beach\",\r\n                    songDuration: 111,\r\n                    songPath: \"songs/bensound-summer.mp3\",\r\n\r\n                },\r\n                {\r\n                    songId:2,\r\n                    songName: \"nowhere here\",\r\n                    songDuration: 988,\r\n                    songPath: \"songs/bensound-summer.mp3\",\r\n\r\n                }\r\n\r\n            ]\r\n        },\r\n        {\r\n            id:5,\r\n            albumName: \"dom\",\r\n            albumPhoto: \"images/sweet.jpg\",\r\n            albumSinger: \"Marlow\",\r\n            songs: [\r\n                {\r\n                    songId:1,\r\n                    songName: \"so sir please\",\r\n                    songDuration: 45,\r\n                    songPath: \"songs/bensound-summer.mp3\",\r\n\r\n                },\r\n                {\r\n                    songId:2,\r\n                    songName: \"cant think of you\",\r\n                    songDuration: 666,\r\n                    songPath: \"songs/bensound-summer.mp3\",\r\n\r\n                },\r\n                {\r\n                    songId:3,\r\n                    songName: \"this is fun\",\r\n                    songDuration: 6969,\r\n                    songPath: \"songs/bensound-summer.mp3\",\r\n\r\n                },\r\n                {\r\n                    songId:4,\r\n                    songName: \"for real\",\r\n                    songDuration: 898,\r\n                    songPath: \"songs/bensound-summer.mp3\",\r\n\r\n                }\r\n\r\n            ]\r\n        },\r\n        {\r\n            id:6,\r\n            albumName: \"exmaple\",\r\n            albumPhoto: \"images/ukulele.jpg\",\r\n            albumSinger: \"Michael\",\r\n            albumNum: 6,\r\n            songs: [\r\n                {\r\n                    songId:1,\r\n                    songName: \"lets see the wind\",\r\n                    songDuration: 111,\r\n                    songPath: \"songs/bensound-summer.mp3\",\r\n\r\n                },\r\n                {\r\n                    songId:2,\r\n                    songName: \"lets eat some fun\",\r\n                    songDuration: 555,\r\n                    songPath: \"songs/bensound-summer.mp3\",\r\n\r\n                },\r\n                {\r\n                    songId:3,\r\n                    songName: \"lets poop some depression!\",\r\n                    songDuration: 6969,\r\n                    songPath: \"songs/bensound-summer.mp3\",\r\n\r\n                }\r\n\r\n            ]\r\n        },\r\n        {\r\n            id:7,\r\n            albumName: \"some album\",\r\n            albumPhoto: \"images/energy.jpg\",\r\n            albumSinger: \"Sean\",\r\n            songs: [\r\n                {\r\n                    songId:1,\r\n                    songName: \"lets see the wind\",\r\n                    songDuration: 111,\r\n                    songPath: \"songs/bensound-summer.mp3\",\r\n                },\r\n                {\r\n                    songId: 2,\r\n                    songName: \"cant think of any\",\r\n                    songDuration: 555,\r\n                    songPath: \"songs/bensound-anewbeginning.mp3\"\r\n                 },\r\n                 {\r\n                    songId: 3,\r\n                    songName: \"even 7 too much\",\r\n                    songDuration: 898,\r\n                    songPath: \"songs/bensound-energy.mp3\"\r\n                 }\r\n\r\n            ]\r\n        },\r\n        \r\n    ];\r\n\r\n","import {FETCH_SONGS,LOG_IN_USER,PLAY_SONG, SET_ALBUM, SET_CURRENT_SONGS, SET_CURRENT_SONG_OBJ} from '../actions/playerActions';\r\nimport {AlbumsList} from '../shared/AlbumsList';\r\n\r\nconst initialState = {\r\n  allSongs:[],\r\n  currentSong:null,\r\n  loggedIn: false,\r\n  albumsList: [],\r\n  currentAlbum:{},\r\n  songsSelected: false,\r\n  currentSongObj:{},\r\n  };\r\n  \r\n  function playerReducer(state = initialState, action) {\r\n    console.log('reducer called: '+ action.type)\r\n    switch(action.type) {\r\n      case FETCH_SONGS:\r\n        console.log('fetch case called', typeof(AlbumsList));\r\n        return {\r\n          ...state,\r\n          albumsList:AlbumsList\r\n        }\r\n      case PLAY_SONG:\r\n        console.log('playsong called'+action.payload)\r\n        return {\r\n          ...state,\r\n          currentSong: action.payload,\r\n        };\r\n      case SET_ALBUM:\r\n        console.log('inside set_slbum_song reducer');\r\n        return {\r\n          ...state,\r\n          currentAlbum: action.payload\r\n        }\r\n      case LOG_IN_USER:\r\n        console.log('inside reducer')\r\n        return {\r\n          ...state,\r\n          loggedIn:true\r\n        }\r\n        case SET_CURRENT_SONGS:\r\n        console.log('inside reducer SET_CURRENT_SONGS')\r\n        return {\r\n          ...state,\r\n          allSongs:action.payload\r\n        }\r\n        case SET_CURRENT_SONG_OBJ:\r\n          console.log('inside reducer SET_CURRENT_SONG_OBJ')\r\n          return {\r\n            ...state,\r\n            ...{currentSongObj:action.payload}\r\n            \r\n          }\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n\r\n  export default playerReducer;","export const LOG_IN_USER='LOG_IN_USER';\r\nexport const FETCH_SONGS = 'FETCH_SONGS';\r\nexport const SET_ALBUM = 'SET_ALBUM';\r\nexport const SET_CURRENT_SONGS = 'SET_CURRENT_SONGS';\r\nexport const SET_CURRENT_SONG_OBJ = 'SET_CURRENT_SONG_OBJ';\r\nexport const PLAY_SONG = 'PLAY_SONG';\r\n","import {combineReducers} from 'redux';\r\n\r\nimport playerReducer from './playerReducer';\r\n\r\nexport default combineReducers({\r\n    player:playerReducer\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialSate = {};\r\nconst middleWare= [thunk];\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, initialSate, composeEnhancers(applyMiddleware(...middleWare,)));\r\n\r\nexport default store;","export const Domain = \"https://vast-coast-55318.herokuapp.com/\";\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { playSong, setCurrentAlbum, setCurrentSongObj } from '../actions/fetchSongs';\r\nimport '../css/songs.css';\r\nimport {Domain} from '../domainName';\r\n\r\nclass songsComponent extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            albumName: \"some album\",\r\n            albumPhoto: \"https://vast-coast-55318.herokuapp.com/images/clearday.jpg\",\r\n            albumSinger: \"Rey\",\r\n            songList: [],\r\n            count:0\r\n        }\r\n        \r\n    }\r\n\r\n    setCurrentSongPath = (path) => {\r\n        this.props.playSong(path);\r\n    }\r\n    \r\n    componentDidMount () {\r\n      }\r\n\r\n      imageClick(item){\r\n        console.log('play this some ',item);\r\n          //this.props.playSong(item.songPath);\r\n          this.props.setCurrentSongObj(item);\r\n          this.props.playsong(item);\r\n      }\r\n\r\n\r\n    render(){\r\n  \r\n       \r\n        return(\r\n            <div>        \r\n                <div className=\"row ml-5 albumPane\">\r\n                    <div className=\"albumImage\">\r\n                        <img  src={Domain + this.props.album.albumPhoto} alt=\"\"></img>\r\n                    </div>\r\n                    <div className=\"albumDetails\">\r\n                        <div className=\"row\"><h3 className=\"text-white\">{this.props.album.albumName}</h3></div>\r\n                        <div className=\"row\" className=\"text-white\">{this.props.album.albumSinger}</div>\r\n                        <div className=\"row\" className=\"text-white\">Songs: {this.props.songs.length}</div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"tracklistContainer\">\r\n                    <ul className=\"tracklist\">\r\n                        {this.props.songs.map((item,id)=>{\r\n                            return(\r\n                                <li key={id} className='tracklistRow'>\r\n                                    <div className='trackCount'>\r\n                                        <img onClick={() => this.imageClick(item)} className='play' alt=\"something\" src={Domain + 'icons/play-white.png'}/>\r\n                                        <span className='trackNumber'>{item.songId}</span>\r\n                                    </div>\r\n\r\n\r\n                                    <div className='trackInfo'>\r\n                                        <span className='trackName'>{item.songName}</span>\r\n                                        <span className='artistName'>{item.albumSinger}</span>\r\n                                    </div>\r\n\r\n                                    <div className='trackOptions'>\r\n                                        <img className='play' alt=\"something\" src={Domain + 'icons/more.png' }/>\r\n                                    </div>\r\n\r\n                                    <div className='trackDuration'>\r\n                                        <span className='duration'>{item.songDuration}</span>\r\n                                    </div>\r\n\r\n                                </li>)\r\n                        })}  \r\n                    </ul>\r\n                </div>\r\n   \r\n\r\n                {this.props.albumInfo}\r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        // playSong: (songPath) => dispatch(playSong(songPath)),\r\n        setCurrentSongObj: (song) => dispatch(setCurrentSongObj(song))\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    player: state.player.allSongs,\r\n    currentSong: state.player.currentSong,\r\n    albumsList: state.player.albumsList,\r\n    album: state.player.currentAlbum,\r\n    songs: state.player.allSongs\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(songsComponent)","import {FETCH_SONGS,\r\n        PLAY_SONG,\r\n        LOG_IN_USER,\r\n        SET_ALBUM,\r\n        SET_CURRENT_SONGS,\r\n        SET_CURRENT_SONG_OBJ} from './playerActions';\r\n\r\nexport const fetchSongs = () => dispatch =>{\r\n    return dispatch({\r\n        type: FETCH_SONGS,\r\n    })\r\n}\r\n\r\n\r\nexport const playSong = (songPath) => dispatch =>{\r\n    console.log('play song called '+ songPath);\r\n    return dispatch({\r\n        type: PLAY_SONG,\r\n        payload: songPath\r\n    })\r\n}\r\n\r\nexport const logInUser = () => dispatch=>{\r\nconsole.log('user about to log in');\r\nreturn dispatch({\r\n        type: LOG_IN_USER\r\n})\r\n}\r\n\r\nexport const setCurrentAlbum = (album) => dispatch=>{\r\n    console.log('setAlbumSongs called', album);\r\n    return dispatch({\r\n        type:SET_ALBUM,\r\n        payload:album\r\n    })\r\n}\r\n\r\nexport const setCurrentSongs = (songs) => dispatch=>{\r\n    console.log('SET_CURRENT_SONGS action called', songs);\r\n    return dispatch({\r\n        type: SET_CURRENT_SONGS,\r\n        payload:songs\r\n    })\r\n}\r\n\r\nexport const setCurrentSongObj = (song) => dispatch=>{\r\n    console.log('SET_CURRENT_SONG_OBJ action called', song);\r\n    // let count = 0;\r\n    // song.count = count;\r\n    return dispatch({\r\n        type: SET_CURRENT_SONG_OBJ,\r\n        payload:song\r\n    })\r\n}","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport {Domain} from '../domainName';\r\nimport \"../css/sideBar.css\";\r\n\r\nexport class SidebarComponent extends Component {\r\n  render() {\r\n\r\n\r\n    return (\r\n      <div className=\"sideMain\">\r\n        <nav className=\"navBar\">\r\n          <div className=\"logo\">\r\n            <img src={Domain + \"icons/logo.png\"} alt=\"logo\" />\r\n          </div>\r\n          <div className=\"group\">\r\n            <div className=\"navItem\">\r\n              <div className=\"navItemLink\"> <Link to={`/Search`}>Search</Link>\r\n                <img src={Domain + \"icons/search.png\"} className=\"icon\" alt=\"Search\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"navItem\">\r\n              <div className=\"navItemLink\"> <Link to={`/Search`}>Logout</Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { Domain } from '../domainName';\r\n\r\nimport '../css/Player.css';\r\n\r\nclass PlayerComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.myInput = React.createRef();\r\n        this.myInputVol = React.createRef();\r\n        this.myInputPlayBar = React.createRef();\r\n\r\n        this.state = {\r\n            count: 0,\r\n            currentSong: \"https://vast-coast-55318.herokuapp.com/songs/bensound-anewbeginning.mp3\",\r\n            remTime: 0.00,\r\n            currTime:0.00,\r\n            volSymbol: true,\r\n            mouseDown: false,\r\n            shuffleSong: false,\r\n            vol: 1,\r\n            play: false,\r\n            repeat: false,\r\n            allSongs: [],\r\n            currentSongId: 1,\r\n            dummyCounter: 0,\r\n            currentSongObj: null,\r\n            shuffledListId: [],\r\n            prevVol:null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.audio = new Audio();\r\n        this.props.onRef(this);\r\n        this.setState({ allSongs: this.props.allSongs });\r\n        this.audio.onloadedmetadata =()=> {\r\n            this.setState({remTime:this.audio.duration})\r\n            this.setState({currTime:this.audio.currentTime})\r\n        \r\n        };\r\n         this.audio.addEventListener(\"canplay\", ()=> {\r\n            this.setState({remTime:this.audio.duration})\r\n            });\r\n            this.audio.addEventListener(\"timeupdate\", ()=>{\r\n              if(this.audio.duration) {\r\n                this.setState({currTime: this.audio.currentTime})\r\n              }\r\n            });\r\n        \r\n            this.audio.addEventListener(\"ended\", ()=>{\r\n                this.nextSong();\r\n            })\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        this.props.onRef(null)\r\n    }\r\n\r\n    shuffleSongs = () => {\r\n        if (this.state.shuffleSong === true) {\r\n            console.log('shuffle song false');\r\n            this.setState({ shuffleSong: !this.state.shuffleSong });\r\n        } else {\r\n            this.setState({ shuffleSong: !this.state.shuffleSong });\r\n            let idArray = this.props.allSongs.map(song => { return song.songId });\r\n            let shuffledListId = [];\r\n            shuffledListId = this.shuffleArray(idArray);\r\n            this.setState({ shuffledListId });\r\n            console.log('computation done', this.state.shuffledListId);\r\n        }\r\n\r\n    }\r\n\r\n    shuffleArray(array) {\r\n        let i = array.length - 1;\r\n        for (; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            const temp = array[i];\r\n            array[i] = array[j];\r\n            array[j] = temp;\r\n        }\r\n        return array;\r\n    }\r\n\r\n\r\n    prevSong = () => {\r\n        let prevSongId = null;\r\n        let shuffledIds = null;\r\n\r\n        if (this.state.repeat) {\r\n            prevSongId = this.state.currentSongId;\r\n        } else {\r\n            prevSongId = this.state.currentSongId - 1;\r\n        }\r\n\r\n\r\n\r\n        if (this.state.shuffleSong) {\r\n            shuffledIds = this.state.shuffledListId;\r\n\r\n            // --------------------------------------------------------------\r\n\r\n            if (this.state.count === 0) {\r\n                let num = this.props.allSongs.length - 1;\r\n                this.setState({ count: num });\r\n            } else {\r\n                this.setState({ count: this.state.count - 1 })\r\n            }\r\n\r\n            // --------------------------------------------------------------\r\n\r\n            if (this.state.repeat) {\r\n                prevSongId = this.state.currentSongId;\r\n            } else {\r\n                prevSongId = shuffledIds[this.state.count];\r\n            }\r\n            // -----------------------------------------------------------------\r\n\r\n            if (prevSongId < 1) {\r\n                prevSongId = shuffledIds[this.state.songList.length - 1];\r\n                this.setState({ currentSongId: prevSongId })\r\n\r\n            } else {\r\n                this.setState({ currentSongId: prevSongId })\r\n            }\r\n\r\n            // --------------------------------------------------------------------\r\n\r\n            this.props.allSongs.forEach(item => {\r\n                if (item.songId === prevSongId) {\r\n                    this.setState({ song: Domain +item.songPath });\r\n                    this.audio.src = Domain + item.songPath;\r\n\r\n                    this.audio.load();\r\n                    if (this.state.play) {\r\n                        this.playSong();\r\n                    }\r\n\r\n                }\r\n            })\r\n        } else {\r\n            if (prevSongId < 1) {\r\n                prevSongId = this.state.songList.length;\r\n                this.setState({ currentSongId: prevSongId })\r\n\r\n            } else {\r\n                this.setState({ currentSongId: prevSongId })\r\n            }\r\n            //console.log(\"THIS IS prevSongId:---------\"+prevSongId);\r\n            this.props.allSongs.forEach(item => {\r\n                if (item.songId === prevSongId) {\r\n                    this.setState({ song: Domain+ item.songPath });\r\n                    this.audio.src =Domain+ item.songPath;\r\n                    this.audio.load();\r\n\r\n                    if (this.state.play) {\r\n                        this.playSong();\r\n\r\n                    }\r\n\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    playSongComponent = (song) => {\r\n        console.log(\"playSongComponent called ----\", song);\r\n        this.setState({ currentSongObj: song, currentSongId: song.songId });\r\n        this.audio.src = Domain + song.songPath;\r\n        this.audio.load();\r\n        this.playSong();\r\n    }\r\n\r\n    playSong = () => {\r\n        let playPromise = this.audio.play();\r\n\r\n        if (playPromise !== undefined) {\r\n            playPromise\r\n                .then(_ => {\r\n                    console.log(\"audio played auto\");\r\n                    this.setState({ play: true })\r\n                })\r\n                .catch(error => {\r\n                    console.log(\"playback prevented\");\r\n                });\r\n        }\r\n    }\r\n\r\n    pauseSong = () => {\r\n        this.audio.pause();\r\n        this.setState({ play: false })\r\n    }\r\n    nextSong = () => {\r\n\r\n        let nextSongId = null;\r\n        let shuffledIds = null;\r\n\r\n        if (this.state.repeat) {\r\n            nextSongId = this.state.currentSongId;\r\n        } else {\r\n            nextSongId = this.state.currentSongId + 1;\r\n        }\r\n\r\n        if (this.state.shuffleSong) {\r\n            shuffledIds = this.state.shuffledListId;\r\n\r\n            this.setState({ count: this.state.count + 1 })\r\n\r\n            if (this.state.count > this.props.allSongs.length - 2) {\r\n                this.setState({ count: 0 });\r\n            }\r\n\r\n            if (this.state.repeat) {\r\n                nextSongId = this.state.currentSongId;\r\n            } else {\r\n                nextSongId = shuffledIds[this.state.count];\r\n\r\n            }\r\n\r\n            if (nextSongId > this.props.allSongs.length) {\r\n                nextSongId = shuffledIds[0];\r\n                this.setState({ currentSongId: nextSongId })\r\n\r\n            } else {\r\n                this.setState({ currentSongId: nextSongId })\r\n            }\r\n\r\n            this.props.allSongs.forEach(item => {\r\n                if (item.songId === nextSongId) {\r\n                    this.setState({ song: Domain+ item.songPath });\r\n                    this.audio.src = Domain+ item.songPath;\r\n\r\n                    this.audio.load();\r\n                    if (this.state.play) {\r\n                        this.playSong();\r\n                    }\r\n\r\n                }\r\n\r\n            })\r\n        }\r\n        else {\r\n        if (nextSongId > this.props.allSongs.length) {\r\n            nextSongId = 1;\r\n            this.setState({ currentSongId: nextSongId })\r\n\r\n        } else {\r\n            this.setState({ currentSongId: nextSongId })\r\n        }\r\n\r\n        this.props.allSongs.forEach(item => {\r\n            if (item.songId === nextSongId) {\r\n                this.setState({ song: item.songPath, currentSongObj: item, currentSongId: item.songId });\r\n                this.audio.src = Domain + item.songPath;\r\n                this.audio.load();\r\n                if (this.state.play) {\r\n                    this.playSong();\r\n                }\r\n\r\n            }\r\n        })\r\n        }\r\n    }\r\n\r\n\r\n    formatTime = (time) => {\r\n        return Math.floor(time / 60) + ':' + ('0' + Math.floor(time % 60)).slice(-2);\r\n    };\r\n\r\n    handleEvent = (event) => {\r\n        if (event.type === \"mousedown\") {\r\n            this.setState({ mouseDown: true });\r\n        }\r\n    }\r\n    handleEvent2 = (event) => {\r\n        this.timeFromOffset(event, this.myInput.current.offsetWidth);\r\n        this.setState({ mouseDown: false });\r\n    }\r\n\r\n    onMouseMove = (e) => {\r\n        if (this.state.mouseDown) {\r\n            this.timeFromOffset(e, this.myInput.current.offsetWidth);\r\n        }\r\n    }\r\n    // ----------------------------------------------------------------------------------------------\r\n    handlOnMouseDownVol = (event) => {\r\n        if (event.type === \"mousedown\") {\r\n            this.setState({ mouseDown: true });\r\n        }\r\n    }\r\n    handleOnMouseUpVol = (event) => {\r\n        let perc = event.nativeEvent.offsetX / this.myInputVol.current.offsetWidth;\r\n        this.setVol(perc);\r\n        this.setState({ mouseDown: false, vol: perc });\r\n    }\r\n\r\n    onMouseMoveVol = (e) => {\r\n        if (this.state.mouseDown) {\r\n            let perc = e.nativeEvent.offsetX / this.myInputVol.current.offsetWidth;\r\n            this.setState({ vol: perc });\r\n            this.setVol(perc);\r\n        }\r\n    }\r\n\r\n    mute = () => {\r\n\r\n        if(this.state.volSymbol){\r\n            this.setState({prevVol: this.state.vol})\r\n            this.setState({vol:0, volSymbol:false})\r\n        }else{\r\n            this.setState({vol:this.state.prevVol, volSymbol:true})\r\n        }\r\n        this.setVol();\r\n    }\r\n\r\n    setVol=(vol)=>{\r\n        if(vol){\r\n          if(vol<0){\r\n            vol=0\r\n          }\r\n          if(vol>1){\r\n            vol=1\r\n          }\r\n          this.audio.onloadedmetadata= () => {\r\n          };\r\n          this.audio.volume = vol;\r\n        }else{\r\n          this.audio.muted = !this.audio.muted\r\n        }\r\n       \r\n      }\r\n\r\n    timeFromOffset(mouse, progressBar) {\r\n        let percentage = mouse.nativeEvent.offsetX / progressBar * 100;\r\n        let seconds = this.state.remTime * (percentage / 100);\r\n        this.setTime(seconds);\r\n    }\r\n\r\n    preventDefault(e) {\r\n        e.preventDefault();\r\n    }\r\n\r\n    repeatSong = () => {\r\n        this.setState({ repeat: !this.state.repeat })\r\n    }\r\n\r\n    setTime=(time)=>{\r\n        this.audio.onloadedmetadata= () => {\r\n        };\r\n        this.audio.currentTime=time;\r\n        }\r\n\r\n    render() {\r\n\r\n\r\n\r\n        let remTime = this.state.remTime;\r\n         let currTime = this.state.currTime;\r\n         let progress = currTime / remTime * 100;\r\n         let finalP = progress + '%';\r\n         let finalVol = this.state.vol*100 + '%';\r\n\r\n\r\n        return (\r\n            <div onMouseDown={this.preventDefault.bind(this)} onDragStart={this.preventDefault.bind(this)} onMouseMove={this.preventDefault.bind(this)} onDrag={this.preventDefault.bind(this)} ref={this.myInputPlayBar} className=\"player\">\r\n                <div id=\"nowPlayingLeft\">\r\n                    <div className=\"content\">\r\n                        <span className=\"albumLink\">\r\n                            <img src={Domain + this.props.album.albumPhoto} className=\"albumArtwork\" alt=\"\" />\r\n                        </span>\r\n                        <div className=\"trackInfo\">\r\n                            <span className=\"trackName\">\r\n                                <span>{this.props.album.albumName}</span>\r\n                            </span>\r\n                            <span className=\"artistName\">\r\n                                <span>{this.props.album.albumSinger}</span>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"nowPlayingCenter\">\r\n                    <div className=\"content playerControls\">\r\n                        <div className=\"buttons\">\r\n                            <button onClick={this.shuffleSongs} className=\"controlButton shuffle\" title=\"Shuffle button\" style={{ display: this.state.shuffleSong ? 'none' : '' }}>\r\n                                <img src={Domain + \"icons/shuffle.png\"} alt=\"Shuffle\" />\r\n                            </button>\r\n\r\n                            <button onClick={this.shuffleSongs} className=\"controlButton shuffle\" title=\"Shuffle button\" style={{ display: this.state.shuffleSong ? '' : 'none' }}>\r\n                                <img src={Domain + 'icons/shuffle-active.png'} alt=\"Shuffle\" />\r\n                            </button>\r\n\r\n                            <button onClick={() => { this.prevSong() }} className=\"controlButton previous\" title=\"Previous button\">\r\n                                <img src={Domain + 'icons/previous.png'} alt=\"Previous\" />\r\n                            </button>\r\n\r\n                            <button onClick={() => { this.playSong() }} className=\"controlButton play\" title=\"Play button\" style={{ display: this.state.play ? 'none' : '' }}>\r\n                                <img src={Domain + 'icons/play.png'} alt=\"Play\" />\r\n                            </button>\r\n\r\n                            <button onClick={() => { this.pauseSong() }} className=\"controlButton pause\" title=\"Pause button\" style={{ display: this.state.play ? '' : 'none' }}>\r\n                                <img src={Domain + 'icons/pause.png'} alt=\"Pause\" />\r\n                            </button>\r\n                            <button onClick={() => { this.nextSong() }} className=\"controlButton next\" title=\"Next button\">\r\n                                <img src={Domain + 'icons/next.png'} alt=\"Next\" />\r\n                            </button>\r\n\r\n                            <button onClick={() => { this.repeatSong() }} className=\"controlButton repeat\" title=\"Repeat button\" style={{ display: this.state.repeat ? 'none' : '' }}>\r\n                                <img src={Domain + 'icons/repeat.png'} alt=\"Repeat\" />\r\n                            </button>\r\n                            <button onClick={() => { this.repeatSong() }} className=\"controlButton repeat\" title=\"Repeat button\" style={{ display: this.state.repeat ? '' : 'none' }}>\r\n                                <img src={Domain + 'icons/repeat-active.png'} alt=\"Repeat\" />\r\n                            </button>\r\n                        </div>\r\n\r\n                        <div className=\"playbackBar\">\r\n                            <span className=\"progressTime current\">{this.formatTime(currTime)}</span>\r\n\r\n                            <div className=\"progressBar\" ref={this.myInput} onMouseDown={ this.handleEvent } onMouseMove={this.onMouseMove} onMouseUp={this.handleEvent2} >\r\n                                <div className=\"progressBarBg\">\r\n                                    <div style={{width : finalP}} className=\"progressLoc\"></div>\r\n                                </div>\r\n                            </div>\r\n                            <span className=\"progressTime remaining\">{this.formatTime(remTime - currTime)}</span>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div id=\"nowPlayingRight\">\r\n                    <div className=\"volumeBar\">\r\n                        <button onClick={this.mute} className=\"controlButton volume\" title=\"Volume button\" style={{ display: this.state.volSymbol ? '' : 'none' }}>\r\n                            <img src={Domain + 'icons/volume.png'} alt=\"Volume\" />\r\n                        </button>\r\n                        <button onClick={this.mute} className=\"controlButton volume\" title=\"Volume button\" style={{ display: this.state.volSymbol ? 'none' : '' }}>\r\n                            <img src={Domain + 'icons/volume-mute.png'} alt=\"Volume\" />\r\n                        </button>\r\n                        <div ref={this.myInputVol} onMouseDown={this.handlOnMouseDownVol} onMouseMove={this.onMouseMoveVol} onMouseUp={this.handleOnMouseUpVol}  className=\"progressBar\">\r\n                            <div className=\"progressBarBg\">\r\n                                <div style={{ width : finalVol }} className=\"songVolProgress\"></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    player: state.player.allSongs,\r\n    currentSong: state.player.currentSong,\r\n    album: state.player.currentAlbum,\r\n    allSongs: state.player.allSongs,\r\n    currentSongObj: state.player.currentSongObj\r\n})\r\n\r\nexport default connect(mapStateToProps)(PlayerComponent)","import React, { Component } from 'react'\r\nimport { fetchSongs, setCurrentAlbum, setCurrentSongs } from '../actions/fetchSongs';\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass AlbumsComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    setSongs = (album) => {\r\n        console.log(album);\r\n        this.props.setCurrentAlbum(album);\r\n        this.props.setCurrentSongs(album.songs)\r\n        this.props.history.push('/maincomponent/songs');\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const style = {\r\n            cursor: \"pointer\"\r\n        }\r\n        const imageWidth={\r\n            width:\"200px\",\r\n            minWidth:\"50px\"\r\n        }\r\n        const thumbnail={\r\n            cursor:\"pointer\",\r\n            margin: \"20px\",\r\n            minWidth: \"20px\",\r\n            maxWidth: \"180px\"\r\n        }\r\n        const domain = \"https://vast-coast-55318.herokuapp.com/\";\r\n\r\n        const albums = this.props.albumsArray.map(album => {\r\n            return (\r\n                <div key={album.id}>\r\n                    <div style={style} style={thumbnail} onClick={() => this.setSongs(album)}>\r\n                        <figure>\r\n                            <img src={domain + album.albumPhoto} style={imageWidth} className=\"img-fluid\" alt=\"Lights\" />\r\n                        </figure>\r\n                        <div className=\"caption text-center\">\r\n                            <p className=\"text-white\">{album.albumName}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n        return (\r\n            <>\r\n                <h1 className=\"text-center text-white\">Albums List</h1>\r\n                <div className=\"row ml-5 d-flex\">\r\n                    {albums}\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchSongs: () => dispatch(fetchSongs()),\r\n        setCurrentAlbum: (album) => dispatch(setCurrentAlbum(album)),\r\n        setCurrentSongs: (songs) => dispatch(setCurrentSongs(songs))\r\n\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    player: state.player.allSongs,\r\n    currentSong: state.player.currentSong,\r\n    albumsList: state.player.albumsList\r\n})\r\nexport default compose(withRouter, connect(mapStateToProps, mapDispatchToProps))(AlbumsComponent)","import React, { Component } from 'react'\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport Songs from './songsComponent';\r\nimport { SidebarComponent } from './SidebarComponent';\r\nimport PlayerComponent from './PlayerComponent';\r\nimport { fetchSongs } from '../actions/fetchSongs';\r\nimport AlbumsComponent from './AlbumsComponent';\r\n\r\nclass MainComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentSongObj: {},\r\n            count: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchSongs();\r\n    }\r\n    showAlbumsList = () => {\r\n        console.log(this.props.albumsList);\r\n    }\r\n\r\n    playsong = (song) => {\r\n        console.log('main comaponent', song)\r\n        // this.setState(prevState => {\r\n        //     return {count: prevState.count + 1, currentSongObj:song}\r\n        //  })\r\n        this.setState({ currentSongObj: song })\r\n        this.player.playSongComponent(song);\r\n    }\r\n    render() {\r\n        return (\r\n\r\n            <>\r\n                <main className=\"container-fluid m-0 p-0\">\r\n                    <div style={{ backgroundColor: \"black\" }} className=\"row m-0\">\r\n                        <div style={ { height: \"100vh\" }} className=\"col-2 pl-0 pr-2\">\r\n                            <SidebarComponent />\r\n                        </div>\r\n                        <div style={ { height: \"100vh\" }} className=\"col-10\">\r\n                            <Switch>\r\n                                <Route path=\"/maincomponent/albums\" component={() => <AlbumsComponent albumsArray={this.props.albumsList} />} />\r\n                                <Route path=\"/maincomponent/songs\" component={() => <Songs playsong={(song) => this.playsong(song)} />} />\r\n                            </Switch>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row p-0 m-0\">\r\n                        <PlayerComponent onRef={ref => (this.player = ref)} />\r\n                    </div>\r\n\r\n                </main>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchSongs: () => dispatch(fetchSongs()),\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    player: state.player.allSongs,\r\n    currentSong: state.player.currentSong,\r\n    albumsList: state.player.albumsList\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainComponent)","import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { logInUser } from \"../actions/fetchSongs\";\r\nimport '../css/login.css';\r\nclass login extends Component {\r\n  state = {\r\n    isloggedin: false,\r\n  };\r\n\r\n  render() {\r\n    if (this.state.isloggedin) {\r\n      return <Redirect to=\"/maincomponent/albums\" />;\r\n    }\r\n    const domain = \"https://vast-coast-55318.herokuapp.com/\";\r\n    return (\r\n        \r\n      <div>\r\n        <div className=\"container-login100\">\r\n          <div className=\"wrap-login100 p-t-190 p-b-30\">\r\n            <form className=\"login100-form validate-form\">\r\n              <div className=\"login100-form-avatar\">\r\n                <img src={domain+\"/images/avatar-01.jpg\"} alt=\"AVATAR\" />\r\n              </div>\r\n\r\n              <span className=\"login100-form-title p-t-20 p-b-45\">\r\n                ASH RANA\r\n              </span>\r\n\r\n              <div\r\n                className=\"wrap-input100 validate-input m-b-10\"\r\n                data-validate=\"Username is required\"\r\n              >\r\n                <input\r\n                  className=\"input100\"\r\n                  type=\"text\"\r\n                  name=\"username\"\r\n                  placeholder=\"Username\"\r\n                  onChange={(e) =>\r\n                    this.setState({ [e.target.name]: e.target.value })\r\n                  }\r\n                />\r\n                <span className=\"focus-input100\"></span>\r\n                <span className=\"symbol-input100\">\r\n                  <i className=\"fa fa-user\"></i>\r\n                </span>\r\n              </div>\r\n\r\n              <div\r\n                className=\"wrap-input100 validate-input m-b-10\"\r\n                data-validate=\"Password is required\"\r\n              >\r\n                <input\r\n                  className=\"input100\"\r\n                  type=\"password\"\r\n                  name=\"pass\"\r\n                  placeholder=\"Password\"\r\n                  onChange={(e) =>\r\n                    this.setState({ [e.target.name]: e.target.value })\r\n                  }\r\n                />\r\n                <span className=\"focus-input100\"></span>\r\n                <span className=\"symbol-input100\">\r\n                  <i className=\"fa fa-lock\"></i>\r\n                </span>\r\n              </div>\r\n\r\n              <div className=\"container-login100-form-btn p-t-10\">\r\n                <button\r\n                  className=\"login100-form-btn\"\r\n                  type=\"button\"\r\n                  onClick={() => this.setState({ isloggedin: true })}\r\n                >\r\n                  Login\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logInUser: () => dispatch(logInUser()),\r\n  };\r\n};\r\n\r\nconst mapStatetoProps = ({ player }) => {\r\n  return {\r\n    player,\r\n  };\r\n};\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(login);\r\n","import React, { Component } from 'react';\r\nimport \"./../css/dragdrop.css\"\r\n\r\n//experiment for dropping a song and then playing it\r\n\r\nexport default class CustomDragDrop extends Component {\r\n    state = {\r\n        tasks: [\r\n            {name:\"Some Song\",category:\"wip\", bgcolor: \"orange\"},\r\n            {name:\"Korean Pop\", category:\"wip\", bgcolor:\"pink\"},\r\n            {name:\"Bollywood\", category:\"complete\", bgcolor:\"skyblue\"}\r\n          ]\r\n    }\r\n\r\n    onDragStart = (ev, id) => {\r\n        console.log('dragstart:',id);\r\n        ev.dataTransfer.setData(\"id\", id);\r\n    }\r\n\r\n    onDragOver = (ev) => {\r\n        ev.preventDefault();\r\n    }\r\n\r\n    onDrop = (ev, cat) => {\r\n       let id = ev.dataTransfer.getData(\"id\");\r\n       \r\n       let tasks = this.state.tasks.filter((task) => {\r\n           if (task.name == id) {\r\n               task.category = cat;\r\n           }\r\n           return task;\r\n       });\r\n\r\n       this.setState({\r\n           ...this.state,\r\n           tasks\r\n       });\r\n    }\r\n\r\n    render() {\r\n        var tasks = {\r\n            wip: [],\r\n            complete: []\r\n        }\r\n\r\n        this.state.tasks.forEach ((t) => {\r\n            tasks[t.category].push(\r\n                <div key={t.name} \r\n                    onDragStart = {(e) => this.onDragStart(e, t.name)}\r\n                    draggable\r\n                    className=\"draggable\"\r\n                    style = {{backgroundColor: t.bgcolor}}\r\n                >\r\n                    {t.name}\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"container-drag\">\r\n                <h2 className=\"header\">Drag and drop song to play </h2>\r\n                <div className=\"wip\"\r\n                    onDragOver={(e)=>this.onDragOver(e)}\r\n                    onDrop={(e)=>{this.onDrop(e, \"wip\")}}>\r\n                    <span className=\"task-header\">WIP</span>\r\n                    {tasks.wip}\r\n                </div>\r\n                <div className=\"droppable\" \r\n                    onDragOver={(e)=>this.onDragOver(e)}\r\n                    onDrop={(e)=>this.onDrop(e, \"complete\")}>\r\n                     <span className=\"task-header\">COMPLETED</span>\r\n                     {tasks.complete}\r\n                </div>\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {Provider} from 'react-redux';\r\nimport store from './store';\r\nimport { Route, Link, BrowserRouter as Router, Switch } from 'react-router-dom'\r\nimport MainComponent from './components/MainComponent';\r\nimport login from './components/login';\r\nimport './App.css';\r\nimport CustomDragDrop from './components/CustomDragDrop';\r\nexport default function App() {\r\n\r\n\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      \r\n        <Router>\r\n          <Switch>\r\n            <Route path=\"/login\" component={login} />\r\n            <Route path=\"/maincomponent\" component={MainComponent}/>\r\n            <Route path=\"/customsongdrop\" component={CustomDragDrop}/>\r\n            <Route exact path=\"/\" component={login} />\r\n            </Switch>\r\n        </Router>\r\n      \r\n    </Provider>\r\n  );\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nReactDOM.render(<App/>, document.getElementById('root'))\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}